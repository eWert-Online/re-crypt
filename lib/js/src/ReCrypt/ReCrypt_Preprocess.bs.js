// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Char = require("bs-platform/lib/js/char.js");
var Bytes = require("bs-platform/lib/js/bytes.js");
var Caml_bytes = require("bs-platform/lib/js/caml_bytes.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function pad(msgBytes) {
  var size = {
    contents: msgBytes.length + 17 | 0
  };
  while(size.contents % 128 !== 0) {
    size.contents = size.contents + 1 | 0;
  };
  return Bytes.init(size.contents, (function (index) {
                var length = msgBytes.length;
                if (index < length) {
                  return Caml_bytes.get(msgBytes, index);
                } else if (index === length) {
                  return Char.chr(128);
                } else if (index === (size.contents - 1 | 0)) {
                  return Pervasives.char_of_int((length << 3));
                } else {
                  return Char.chr(0);
                }
              }));
}

var Sha512 = {
  pad: pad
};

exports.Sha512 = Sha512;
/* No side effect */
