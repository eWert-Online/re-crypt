// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var ReCrypt_Utils = require("../ReCrypt_Utils.bs.js");
var ReCrypt_Functions_MD = require("../Functions/ReCrypt_Functions_MD.bs.js");
var ReCrypt_MD5_Constants = require("./ReCrypt_MD5_Constants.bs.js");

function make(message) {
  var chunks = ((message.length + 8 | 0) >> 6);
  var a = {
    contents: 1732584193
  };
  var b = {
    contents: -271733879
  };
  var c = {
    contents: -1732584194
  };
  var d = {
    contents: 271733878
  };
  var w = Belt_Array.make(16, 0);
  for(var i = 0; i < chunks; ++i){
    for(var j = 0; j <= 63; ++j){
      var result = (Belt_Option.getWithDefault(Belt_Array.get(message, (i << 6) + j | 0), 0) << 24) | (Belt_Option.getWithDefault(Belt_Array.get(w, (j >>> 2)), 0) >>> 8);
      Belt_Array.set(w, (j >>> 2), result);
    }
    var originalA = a.contents;
    var originalB = b.contents;
    var originalC = c.contents;
    var originalD = d.contents;
    Belt_Array.forEachWithIndex(ReCrypt_MD5_Constants.k, (function (j, k) {
            var f = 0 <= j && j <= 15 ? b.contents & c.contents | (b.contents ^ -1) & d.contents : (
                16 <= j && j <= 31 ? b.contents & d.contents | c.contents & (d.contents ^ -1) : (
                    32 <= j && j <= 47 ? b.contents ^ c.contents ^ d.contents : c.contents ^ (b.contents | d.contents ^ -1)
                  )
              );
            var g = 0 <= j && j <= 15 ? j : (
                16 <= j && j <= 31 ? (Caml_int32.imul(5, j) + 1 | 0) % 16 : (
                    32 <= j && j <= 47 ? (Caml_int32.imul(3, j) + 5 | 0) % 16 : Caml_int32.imul(7, j) % 16
                  )
              );
            var temp = b.contents + ReCrypt_Functions_MD.rotl(((a.contents + f | 0) + Belt_Option.getWithDefault(Belt_Array.get(w, g), 0) | 0) + k | 0, Belt_Option.getWithDefault(Belt_Array.get(ReCrypt_MD5_Constants.s, ((j >>> 4) << 2) | j & 3), 0)) | 0;
            a.contents = d.contents;
            d.contents = c.contents;
            c.contents = b.contents;
            b.contents = temp;
            
          }));
    a.contents = originalA + a.contents | 0;
    b.contents = originalB + b.contents | 0;
    c.contents = originalC + c.contents | 0;
    d.contents = originalD + d.contents | 0;
  }
  return ReCrypt_Utils.stringToHex(Belt_Array.reduce(ReCrypt_Utils.append(ReCrypt_Utils.append(ReCrypt_Utils.append(ReCrypt_Utils.append(Belt_Array.make(16, 0), a.contents, 0), b.contents, 4), c.contents, 8), d.contents, 12), "", (function (acc, curr) {
                    return acc + String.fromCharCode(curr);
                  })));
}

exports.make = make;
/* No side effect */
