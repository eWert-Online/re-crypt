// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_int64 = require("bs-platform/lib/js/caml_int64.js");

function append(hash, value, offset) {
  for(var j = 0; j <= 3; ++j){
    Belt_Array.set(hash, j + offset | 0, (value >>> (j << 3)) & 255);
  }
  return hash;
}

function append32(hash, value, offset) {
  for(var j = 0; j <= 3; ++j){
    Belt_Array.set(hash, j + offset | 0, (value >>> (24 - (j << 3) | 0)) & 255);
  }
  return hash;
}

function append64(hash, value, offset) {
  for(var j = 0; j <= 7; ++j){
    Belt_Array.set(hash, j + offset | 0, Caml_int64.to_int32(Caml_int64.and_(Caml_int64.lsr_(value, 56 - (j << 3) | 0), Caml_int64.mk(255, 0))));
  }
  return hash;
}

function stringToHex(input) {
  var hex = "0123456789abcdef";
  return Belt_Array.reduce(input.split(""), "", (function (acc, curr) {
                var charCode = curr.charCodeAt(0) | 0;
                return acc + (hex.charAt((charCode >>> 4) & 15) + hex.charAt(charCode & 15));
              }));
}

exports.append = append;
exports.append32 = append32;
exports.append64 = append64;
exports.stringToHex = stringToHex;
/* No side effect */
